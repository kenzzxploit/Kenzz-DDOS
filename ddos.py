#-----------------------
#Kenzz Hekel
#2024-2025
#-----------------------

import base64
exec(base64.b64decode('#-----------------------
#Kenzz Hekel
#2024-2025
#-----------------------
exec(base64.b64decode('Iy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiNLZW56eiBIZWtlbAojMjAyNC0yMDI1CiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpleGVjKGJhc2U2NC5iNjRkZWNvZGUoJ0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0Q2lOTFpXNTZlaUJJWld0bGJBb2pNakF5TkMweU1ESTFDaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRcGxlR1ZqS0dKaGMyVTJOQzVpTmpSa1pXTnZaR1VvSjBsNU1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhUTUhSTVV6QjBRMmxPVEZwWE5UWmxhVUpKV2xkMGJHSkJiMnBOYWtGNVRrTXdlVTFFU1RGRGFVMTBURk13ZEV4VE1IUk1VekIwVEZNd2RFeFRNSFJNVXpCMFRGTXdkRXhSY0d4bFIxWnFTMGRLYUdNeVZUSk9RelZwVG1wU2ExcFhUblphUjFWdlNqQnNOVTFJVWsxVmVrSXdWRVpOZDJSRmVGUk5TRkpOVlhwQ01GUkdUWGRrUlhoVVRVaFNUVlY2UWpCUk1teFBWRVp3V0U1VVdteGhWVXBLVjJ4a01HSkhTa0ppTW5CV1lsVmFNVmw2U1RWa1IxRjVVbTVzWVZWWE9YRlVWM0JDWlZVMVJFMUliRTVTUld0NFVUSnNUbVJGZUZSTlNGSk5WWHBDTUZSR1RYZGtSWGhVVFVoU1RWVjZRakJVUmsxM1pFVjRWRTFJVWsxVlZ6bE1VMVJDYzJSSFRraFBXR3hyVVRCS1QxbHFTbE5OVjBwSVZtNXdSRm96UW5kWmJHaERaRzFPZFZWWFpHbE5NREZNV1ZaamVHUXlTWHBUYWtKS1UwVkpNVmxzWkhOa1YwWlpZMGhDYWxGWE9VeFphazVPWkZkTmVtSkljR3RTTVZvd1V6Qk9hMkZ0U2toV2JXaHFZVmRPZDFFeVpIWmhhMnhKVkcxNGExRXdTWGRYVm1oTFlteHdXVlZYWkdGU01uZzFWMnhrVDAxSFNYcFRhbFpLVVZoQ01sa3phekZoYlVaSVZXNUNhbUZYWkhWVVJFNVBZVEZyZVZKdWJHRlJlbXhHV1dwT2EyUlhTa2hQVjJoaFVUSk9kMUV5WkhaaGEyeEpVVzFvYWsweFNuZFpWRXBIWkZWc1NHUklRbXRTTUZadVYxY3hWMlZXYkZoVmJXaEtVakZLZDFOVlpGTmpSMDUwVm01S2ExSjZiRFZaVms1RFRVWnNXVk50TldGWFJrWnVVVEkxVTJFeVJsbFRWMlJSVlRCS01sa3phekZpYkhCWlZXMXdhMDFzUm5aVE1VWjNaREpPZEdKSVZtdFJNbVJ3VlVaUmQwOVdRbFZOUkd4UlZrUkJOVlZHVVhkUFZrSlZUVVJzVVZaRVFUVlZSbEYzVDFaQ1ZVMUViRkZXUkVFMVZVWlJkMDlXUWxWTlJHeFJWa1JCTlZWR1VYZFBWV3h3WVRCMGFsTkZjSGRaYlRWU1lqQnNjRkZYWkVwUk1FWnVVMVZPUWxvd2JFUlJWMlJLVVRCR2JsVjZTbGRrVjFaMVlqSmtWRkl4V25sWGJHUXpXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdibE5WVGtKYU1HeEVVVmRrU2xFd2JIZFJNalZEWlZkR1dFNVVRa3hSTUdzMVZVWlJkMDlXUWxWTlJHeFJWa1JCTlZWR1VYZFBWa0pWVFVSc1VWWkVRVFZWUmxGM1QxWkNWVTFFYkZGV1JFRTFWVVpSZDA5V1FsVk5SR3hSVmtSQk5WVkdVWGRoVlhSU1kwaGthbUpYZURGYVJVNXVZVlZzY0dFd2RHcFRSWEIzV1cwMVVtSXdiSEZOUkd4UlZrUkJOVlZHVVhkUFZrSlZUVVJzVVZaRVFUVlZSbEY0WVd4d1dGWllWazVoYTBVMVZVWlJkMDlXUWxWTlJHeFJWa1JCTlZWR1VYZFBWa0pWVFVSc1VWVXdiSGRSTWpWRFpWZEdXRTVVUWt4Uk1HeHdVekZHZGxNd2JEVlJia3BhVm5wR2QxTlZZM2hpUjBwMFVtNXNZVTFzV1hkWlZFcEhaRlZzU0ZkdVFtbFNNVlp1V2taak1VMUhVbGhqTW1SaFVqSjRjMWx0TVRCbFYwWlpVVzV3YUZWWE9YRlRWV2hQVFVkSmVsTnRlRXBUUmtwMlYyeE9RMkpYUmxobFIzaHBZbFZhTUZkc1RrTmpSMHB3VVc1T2FGZEZOSGRSTWpWVFltMVNTRmR1UW1sU01WbzJVMVZSZDFveFpEVlJiVkpFV2pJNWNWTlZaRk5oUm5CMVZXMW9hbUpZVW05WmJXeERaRlpzV0UxWGFFcFNNWEIzV1d0a1Zsb3hiSFJXYm14aFVqQmFObGRXYUV0amJHeFlUa2RrYUZkR1NuTlpNakZIWlcxR1VtTkhNV2xOTUd4dVYyMHhjMk14Y0ZSUmJrSnBZVlZLTWxremF6RmpNa1paVkdwQ1lWSXllRFZUTUdoVFlUSkdXVk5ZUWxCYU1qbHVVMVZPUWxveVJsaFhWMlJoWWxkNGVsZHNUVEZpUjBwMFZXNXdhMDF0ZDNkWlZVNXVZbXQ0ZFdOSVFtcFJNazUzVkRKa2Rsb3diRVJSVjJSS1VUQkdibHBGWkd0TlJuQjBZa2hPWVZkRk1URlhWbWhEWkRGd1dFNVhkRXhTTVhCM1dXdGtWbU5GVG5SWGJscHFZVlZLZEZsV1pEUmlSV3hJWWtoV1NsSjZiRFpVUnpFMFkwZE5lbFZ0ZEdoWFJXeDJXa1ZrVTJOSFRuQmhlbHBFWVZWR2JsTlZUa05qUm5Cd1VXMHhhRll6YUhOVVJ6RlhaRlp3U1ZScVRtaFhSa3AyVXpCT2FtUlhUa2hWYlRGTFpWZHpNbEV5YkVKYU1HeEVVVmRrU2xFd1NYZFhhazVUWWxkR1dHVkhlR3BsVkZadldUQm9RMkpIU25SVlZ6bGhZbGQ0ZWxkc1RuSlRNWEIwVDFoc1NsSXhjSGRaYTJSV1dqSkdXRTVIWkdsTk1ERXhXV3RrYzJWdFVraFZia0pxWVZkbmQxZHJaSE5sVlhSVllqQjBTbEV3Um01VFZXUnpZbFZzU0ZkdVFtbFNNVll4VjJ4ak1XRXlUWHBhU0VKclVqSmtkbE51YXpGaFIwNUlZekkxVEZaSE9VeFRWVTVDV2pCc1JGRlhaRXBUUmtwMVdrVmtZV05IU2toV2JuQk5ZbFZhTTFrd1pGZGtWbkJFWVVjeGFGWXphSE5UTVVaM1lsZEplbE5YWkdGaVYzaDZWMnhPUTJOSFNuQlJibHBxWlZSV2VsbFdhRTlOUm5CSVlraHNURk5HU25KWlZtaEtZMFU1Ym1JeVpFcFJNRVp1V1Zaa1dsb3hjSFJpU0U1aFZYcFdjMWx0TVZObGJWRjVZa1JDYUZFeVpIVlVSM0JyVG10d05XRjZXa1JoVlVadVUxVk9RbG93YkVSUmFrSmhUVEZLZEZsV1pEUmlSMDQxVGxkb2FsTkZTbk5aYlRGU1lqRndkR0pJVG1GVk1uUk1WMjB3TldWVmJFaFhia0pwVWpGV2JsbFdZekJhTWtsNlZGaFdhVkl5ZURaYVJXUlRZMGRPY0dGRVFtRlNNbmcxVXpGU2RsTXdiRVJSVjJSS1VqSjRkRk5WWkdGalIwcElWbGhXWVZaNlZuSlplazVyWTBkU1NGb3lPVXRsVkZaeVdXcEtUMDVGY0RWaGVscEVZVlZHYmxOVlRrSmFNR3hFVVdwQ1lVMHhTblJaVm1RMFlrZE9OVTVYYUdwVFJVcHpXVzB4VW1JeGNIUmlTRTVoVlRKMFRGZHRNRFZsVld4SVYyNUNhVkl4Vm01WlZtTXdXakpKZWxSWVZtbFNNbmcyV2tWa1UyTkhUbkJoUkVKaFVqSjROVk14VW5aVE1HeEVVVmRrU2xJeWVIUlRWV1JoWTBkS1NGWllWbUZXZWxaeVdYcE9hMk5IVWtoYU1qbExaVlJWTUZkV2FFTmphM0ExWVhwYVJHRlZSbTVUVlU1Q1dqQnNSRkZxUW1GTk1VcDBXVlprTkdKSFRqVk9WMmhxVTBWS2MxbHRNVkppTVhCMFlraE9ZVlV5ZEV4WGJUQTFaVlZzU0ZkdVFtbFNNVlp1V1Zaak1Gb3lTWHBVV0ZacFVqSjRObHBGWkZOalIwNXdZVVJDWVZJeWVEVlRNVkoyVXpCc1JGRlhaRXBTTW5oMFUxVmtZV05IU2toV1dGWmhWbnBXY2xsNlRtdGpSMUpJV2pJNVMyVlVWak5aYlRGcVltdDBWV0l3ZEVwUk1FWnVVMVZPUWxvd2JFbFZiVFZyVWpGd2QxbHJaRmRsYTNoMFVtNWthbEl4V2pGWGEwNXZZbGRHV0dWSGVFeFZXRUowV1dwT1Nsb3hjSFJpU0U1aFZUQktkMWx0YkVOa2JVNDFUbGhPYUZkRk5IZFhhMlJ6WlZWMFNWVnRkR2hYUld4M1ZESmtkbG93YkVSUlYyUm9WakZzYmxkdE1YTmpNWEJVVGxkNGFXSldTalphUkVwelRVZEdSRm95TlUxaVdFSXpWMjVzYW1ORk9XNWlNbVJLVVRCR2JsTlZUa0phTWxKSVdrUkNZV0pYZUhwWGJHaE9aRlpzV1ZGdVpHRldlbFp5VXpCa1lXTkhTa2hXV0VKRVlsWndNbGt5YkVOaVYwWllaVWQ0U2xJeWVERlRWV00xWld0NGRHVklRbXBOTVVweVdWWm9TbUl5VWtoVmJrSnFZVmR6TWxFeWJFSmFNR3hFVVc1Q1lXRlZTblJaVm1RMFlrVjRkRlp1Vm1GVFJUUjZXVlpvVTJJd2RFUlpNMVpwVjBWRmQxTnViSEpPYTA1d1VWZGtTbEV3Um01VFZVNURUVVp2ZWxWdE1XaFdNMmh6V1ROck1XRkhUa2xSYlhocFlsWkdkbGR0TVhOak1YQlVZVEIwWVdKVWJEVlRWV1JoWTBkS1NGWlhaR2hXZWxKdVdXcE9UbVJYU2toaVNIQnJVakZLZDFreWJHOU5SbkJJWWtoc1RGWkhPVXhUVlU1Q1dqQnNTR0pITVVwU01YQjNXV3RrVm1SV2NGaE9WM1JxVFRKU2QxcEZaRzVpTUhBMVRsaFNUMUl3Vm5WVE1WSjJVekJzUkZGWFpFcFJNRVp1VTFWb1UySnRVa2hYYmtKcFVqRmFObFJITVVka01rNUlWbTVXWVZFeWFIUlpWbVEwWWtWMFVtTkhNV2xOTUd4dVYyMHhjMk14Y0ZSUmJrSnBZVlZLTWxremF6RmpNa1paVkdwQ1lWSXllRFZUTUdoVFlUSkdXVk5ZUWxCYU1qbHVVMVZPUWxveVJsaFhWMlJoWWxkNGVsZHNUVEZpUjBwMFZXNXdhMDF0ZDNkWlZVNXVZbXQ0ZFZWcVVtdFJNazUzVkRKa2Rsb3diRVJSVjJSS1VUQkdibHBGWkd0TlJuQjBZa2hPWVZkRk1URlhWbWhEWkRGd1dFNVhkRXhTTVhCM1dXdGtWbU5GVG5SWGJscHFZVlZLZEZsV1pEUmlSV3hJWWtoV1NsSjZiRFpVUnpFMFkwZE5lbFZ0ZEdoWFJXeDJXa1ZrVTJOSFRuQmhlbHBFWVZWR2JsTlZUa05qUm5Cd1VXMHhhRll6YUhOVVJ6RlhaRlp3U1ZScVRtaFhSa3AyVXpCT2FtUlhUWGxhTWpWTVZrYzVURk5WVGtKYU1HeEVVVmRrU2xOR1NuVmFSV1JoWTBkS1NGWnVjRTFpVlZveldUQmtWMlJXY0VSaFJ6Rm9Wak5vYzFNeFJuZGlWMGw2VTFka1lXSlhlSHBYYkU1RFkwZEtjRkZ1V21wbFZGWjZXVlpvVDAxR2NFaGlTR3hNVTBaS2NsbFdhRXBqUlRsdVlqSmtTbEV3Um01WlZtUmFXakZ3ZEdKSVRtRlZlbFp6V1cweFUyVnRVWGxpUkVKb1VUSmtkVlJITlVOT1ZYQTFZWHBhUkdGVlJtNVRWVTVDV2pCc1JGRnFRbUZOTVVwMFdWWmtOR0pIVGpWT1YyaHFVMFZLYzFsdE1WSmlNWEIwWWtoT1lWVXlkRXhYYlRBMVpWVnNTRmR1UW1sU01WWnVXVlpqTUZveVNYcFVXRlpwVWpKNE5scEZaRk5qUjA1d1lVUkNZVkl5ZURWVE1WSjJVekJzUkZGWFpFcFNNbmgwVTFWa1lXTkhTa2hXV0ZaaFZucFdjbGw2VG10alIxSklXakk1UzJWVVZuSlpha3BPWW10MFZXSXdkRXBSTUVadVUxVk9RbG93YkVsVmJUVnJVakZ3ZDFsclpGZGxhM2gwVW01a2FsSXhXakZYYTA1dllsZEdXR1ZIZUV4VldFSjBXV3BPU2xveGNIUmlTRTVoVlRCS2QxbHRiRU5rYlU0MVRsaE9hRmRGTkhkWGEyUnpaVlYwU1ZWdGRHaFhSV3gzVkRKa2Rsb3diRVJSVjJSb1ZqRnNibGR0TVhOak1YQlVUbGQ0YVdKV1NqWmFSRXB6VFVkR1JGb3lOVTFpYldoNldYcE9ibUpyZEZWaU1IUktVVEJHYmxOVlRrSmFNR3hKVlcwMWExSXhjSGRaYTJSWFpXdDRkRkp1WkdwU01Wb3hWMnRPYjJKWFJsaGxSM2hNVlZoQ2RGbHFUa3BhTVhCMFlraE9ZVlV3U25kWmJXeERaRzFPTlU1WVRtaFhSVFIzVjJ0a2MyVlZkRWxWYlhSb1YwVnNkMVF5WkhaYU1HeEVVVmRrYUZZeGJHNVhiVEZ6WXpGd1ZFNVhlR2xpVmtvMldrUktjMDFIUmtSYU1qVk5ZbXMwZVZkdWJHcGpSVGx1WWpKa1NsRXdSbTVUVlU1Q1dqSlNTRnBFUW1GaVYzaDZWMnhvVG1SV2JGbFJibVJoVm5wV2NsTXdaR0ZqUjBwSVZsaENSR0pXY0RKWk1teERZbGRHV0dWSGVFcFNNbmd4VTFWak5XVnJlSFJsU0VKcVRURktjbGxXYUVwaU1sSklWVzVDYW1GWGN6SlJNbXhDV2pCc1JGRnVRbUZoVlVwMFdWWmtOR0pGZUhSV2JsWmhVMFUwZWxsV2FGTmlNSFJFV1ROV2EwMXJXWGxUYm14eVRtdE9jRkZYWkVwUk1FWnVVMVZPUTAxR2IzcFZiVEZvVmpOb2Mxa3phekZoUjA1SlVXMTRhV0pXUm5aWGJURnpZekZ3VkdFd2RHRmlWR3cxVTFWa1lXTkhTa2hXVjJSb1ZucFNibGxxVGs1a1YwcElZa2h3YTFJeFNuZFpNbXh2VFVad1NHSkliRXhXUnpsTVUxVk9RbG93YkVoaVJ6RktVakZ3ZDFsclpGWmtWbkJZVGxkMGFrMHlVbmRhUldSdVlqQndOVTVYYUd0aVYzUjFVekZTZGxNd2JFUlJWMlJLVVRCR2JsTlZhRk5pYlZKSVYyNUNhVkl4V2paVVJ6RkhaREpPU0ZadVZtRlJNbWgwV1Zaa05HSkZkRkppTW1SS1VUQkdibE5WVGtKYU1FNTFVVzVzYUZaNlZYZFRNR2hUWW0xU1NGZHVRbWxTTVZvMlV6RkdkbE13YkRWUmJsSnJWak5vYjFsV1RrTmtSbkJZVGxjMVlWWjZWbmxaTWpGelpESk5lV0V5WkdGaVYzaDZWMnhPUTJFeGNGaE9WelZhVm5wU2JscFhNWE5rTUd4SVZXMTRhV0pYVW05WmJXeERZMnhzV1ZWdGFFcFRSVFZ2V1cweFUyTkZUbTVqUnpGcFRUQnNibHBWVGtOalIwcHdVVzVzV2xaNlZuVlhiRTV2WXpGd1dFNUhPV3RTTWxGM1YyMHhjMk14Y0ZsVVdFSk1Wa2M1VEZOVlRrSmFNR3hJWWtoV2FsTkdXWGRWYlRGell6RndWRkZVYkVwVFJrcDFXa1ZrWVdOSFNraFdibkJZVFRKb2ExRXliRUphTUd4RVVXNWFhMWRHU2pOYVJtaFRVakpHV0dWSGVFcFNSRUp1V2tWa2EwMUdjSFJpU0U1aFYwVTFhVnBWV1hkamEyeHdUbFJhYUZkRlJuQlJNbXhDV2pCc1JGRnVaRnBYUlRVMldrUkpOV1ZXY0VSUlZHeEtVVEJ2ZDFsNlNrZGhWMFpaVlcxb2FWTkdXWGxaYTJoWFRXdHNibUl5WkVwUk1FWnVWMVJKTldSSFRrbFRWMlJSVlRCRmVGRXliRUphTUd4RVVXNWtiRlo2Um5kWmJURnpUbTFHV1ZGWVZscE5hbXd3V1RCb1MySkhUWHBVVnpsb1ZucFdNMXBHYUZOU01rWllaVWQ0VFZKVVZqSlpiVEZXWXpKSmVsWnFRbXBUUmxsM1ZXMHhjMk14Y0ZSbFNHUmFWMFUxTmxwRVNUVmxWbkJFWlVkd2FVMXFSak5aTW14eVV6Qk9jRlJYWkdwTmJGcDVWMVpvUzJGSFNuUlpNbVJvVFcxM2QxZFdUa05oVjBaWlZHMW9TbEo2Um5OWmJURnJZakZzV1ZGcVJtcGxWVXAwV1Zaa05HSkZiRWhTYm5CcFVqSjRNVnBXWkVaVE1YQjBUMWhzU2xJeWRHNVpWbU13V2pKT2RGSnVWbUZOYkZaMldXdGtWMlJWZEVsVmJUVnJVakZ3ZDFsclpGZGxhM1JVWVhwYVJHRlZSbTVUVlU1RFpHMU9OVTVZYkdGV2VrWXlXa2N4Vm1JeVVraGFSRUpoWWxkNGVsZHNhRTlaYlVaWFRVaENSRm95T1V4VFdHeERWRlpSZDFScmVFcFNWa3BEVm10V1Jsb3hTbkpQVlRGVFVsWmFWRk5WVm1GVlJscEdUMFYwUkZveU9YRlRWV1JUWTBkT2RGWnRjR3RTZW13MVdsWk9RMDFHYkZsVGJUVmhWMFpHVEZscVRrNWtWbXQ1WVVkMGFGZEZiSFpUYm1zMVpXeHdTRlJ0YUdwaVZrWXlWbFZrYzJGdFVrbFdibXhoVjBVeGRWTXhSblpUTUd3MVVXNWtXbGRGTkhkWlZtUXdZVWRLY0ZGdVNtaFhSa3B2VTFWa1MySkhUblJTYlhSYVZUQktjbGxXVGtOaE1rWlpVMjE0V2sweFNqSlpNalZ5V2pKU1NGSnViR0ZOYkZsM1VUSXhhMkV5UmxsVFYyUlJWVEJLTWxremF6RmliSEJaVlcxd2EwMXNSblpUTVVaMlV6QnNOVkZ1U2xwV2VrWjNVMVZqZUdKSFNuUlNibXhoVFd4WmQxbFVTa2RrVld4SVYyNUNhVkl4Vm01YVJtTXhUVWRTV0dNeVpHRlNNbmh6V1cweE1HVlhSbGxSYm5Cb1ZWYzVjVk5WYUU5TlIwbDZVMjE0U2xOR1NuWlhiRTVEWWxkR1dHVkhlR2xpVlZvd1YyeE9RMk5IU25CUmJrNW9WMFUwZDFFeU5WTmxWbTk2VlcweGFGWXphSE5aTTJ4Q1QxVnNSMk15WkZsVlZ6bE1VMWhzUTJFeGJGaFhha0phVjBWd2VWZFdZekJhTWtwMFVtNVNXbFV3U25SWlZtUTBZa1ZzU0ZOdGVHcGlWa3B2V1hwS1IyVlhSWGxTYmxaS1VqSjNkMWRzYUV0aFIwMTVZVEIwWVdKVWJEVlRWV1JoWTBkS1NGWlhaR2hXZWxKdVdXcE9UbVJYU2toaVNIQnJVakZLZDFreWJHOWliSEJJWWtoc1RGWkhPVXhUVlU1Q1dqQnNTR0pITVVwU01YQjNXV3RrVm1SV2NGaE9WM1JxVFRKU2QxcEZaRzVpTUhBMVRsaEdhbEl5VG5WVE1WSjJVekJzUkZGWFpFcFJNRVp1VTFWb1UyVldiM3BWYlRGb1ZqTm9jMWt6YXpGaFIwNUpVVzE0YVdKV1JuWlhiVEZ6WXpGd1ZHRXdkR0ZpVkd3MVUxVmtZV05IU2toV1YyUm9WbnBTYmxscVRrNWtWMHBJWWtod2ExSXhTbmRaTW14dllteHdTR0pJYkV4V1J6bE1VMVZPUWxvd2JFaGlSekZLVWpGd2QxbHJaRlprVm5CWVRsZDBhazB5VW5kYVJXUnVZakJ3TlU1WVpHbGlWMDUxVXpGU2RsTXdiRVJSVjJSS1VUQkdibE5WYUZObFZtOTZWVzB4YUZZemFITlpNMnN4WVVkT1NWRnRlR2xpVmtaMlYyMHhjMk14Y0ZSaE1IUmhZbFJzTlZOVlpHRmpSMHBJVmxka2FGWjZVbTVaYWs1T1pGZEtTR0pJY0d0U01VcDNXVEpzYjJKc2NFaGlTR3hNVmtjNVRGTlZUa0phTUd4SVlrY3hTbEl4Y0hkWmEyUldaRlp3V0U1WGRHcE5NbEozV2tWa2JtSXdjRFZPV0VacVVqRmFkVk51YkhKT2EwNXdVVmRrU2xFd1JtNVRWVTVEVFVkT2RGcEVRbUZpVjNoNlYyeG9UbVJXYkZsUmJtUmhWbnBXY2xNd1pHRmpSMHBJVmxoQ1JHSldjREpaTW14RFlsZEdXR1ZIZUVwU01uZ3hVMVZqTldWcmVIUmxTRUpxVFRGS2NsbFdhRXBpTVc5NVZXNUNhbUZYY3pKUk1teENXakJzUkZGdVFtRmhWVXAwV1Zaa05HSkZlSFJXYmxaaFUwVTBlbGxXYUZOaU1IUkVXVE5XWVUxdGVIUlRibXh5VG10T2NGRlhaRXBSTUVadVUxVk9RMDFIVG5SYVJFSmhZbGQ0ZWxkc2FFNWtWbXhaVVc1a1lWWjZWbkpUTUdSaFkwZEtTRlpZUWtSaVZuQXlXVEpzUTJKWFJsaGxSM2hLVWpKNE1WTlZZelZsYTNoMFpVaENhazB4U25KWlZtaEtZakZ2ZVZWdVFtcGhWM015VVRKc1Fsb3diRVJSYmtKaFlWVktkRmxXWkRSaVJYaDBWbTVXWVZORk5IcFpWbWhUWWpCMFJGa3pWbWxYUlVWM1UyNXNjazVyVG5CUlYyUktVVEJHYmxOVlRrTk5SMDUwV2tSQ1lXSlhlSHBYYkdoT1pGWnNXVkZ1WkdGV2VsWnlVekJrWVdOSFNraFdXRUpFWWxad01sa3liRU5pVjBaWVpVZDRTbEl5ZURGVFZXTTFaV3Q0ZEdWSVFtcE5NVXB5V1Zab1NtSXhiM2xWYmtKcVlWZHpNbEV5YkVKYU1HeEVVVzVDWVdGVlNuUlpWbVEwWWtWNGRGWnVWbUZUUlRSNldWWm9VMkl3ZEVSWk0xWnBWa1pLYjFOdWJISk9hMDV3VVZka1NsRXdSbTVUVlU1RFRVZE9kRnBFUW1GaVYzaDZWMnhvVG1SV2JGbFJibVJoVm5wV2NsTXdaR0ZqUjBwSVZsaENSR0pXY0RKWk1teERZbGRHV0dWSGVFcFNNbmd4VTFWak5XVnJlSFJsU0VKcVRURktjbGxXYUVwaU1XOTVWVzVDYW1GWGN6SlJNbXhDV2pCc1JGRnVRbUZoVlVwMFdWWmtOR0pGZUhSV2JsWmhVMFUwZWxsV2FGTmlNSFJFV1ROV1dsZEdjSGRUYm14eVRtdE9jRkZYWkVwUk1FWnVVMVZPUTAxR2IzcFZiVEZvVmpOb2Mxa3phekZoUjA1SlVXMTRhV0pXUm5aWGJURnpZekZ3VkdFd2RHRmlWR3cxVTFWa1lXTkhTa2hXVjJSb1ZucFNibGxxVGs1a1YwcElZa2h3YTFJeFNuZFpNbXh2WW14d1NHSkliRXhXUnpsTVUxVk9RbG93YkVoaVJ6RktVakZ3ZDFsclpGWmtWbkJZVGxkMGFrMHlVbmRhUldSdVlqQndOVTVVVGxwWFJteDFVekZTZGxNd2JFUlJWMlJLVVRCR2JsTlZhRk5pYlZKSVYyNUNhVkl4V2paVVJ6RkhaREpPU0ZadVZtRlJNbWgwV1Zaa05HSkZkRkppTW1SS1VUQkdibE5WVGtKYU1FNTFVVzVzYUZaNlZYZFRNR2hUWlZadmVsVnRNV2hXTTJoeldUTnNjbE13VG5CVVYyUnBWMFphZWxkV1pISmFNa3BZVm01V1lVMXNXakZaVkU1TFkwZE9TVlJ1UWtwU01YQjNXV3RrVmxveGNFaFdibFpoVFd0YU1WTlZhSGRqUjA1RVVXMTBZVlo2Vm5WWFZtTXdXakpGZVZKcVFscFZNRW8yVjFaak1XRXlSbEpqUnpGcFRUQnNibHBWVGtOalIwcHdVVzVzV2xaNlZuVlhiRTV2WXpGd1dFNUhPV3RUUlhCMVdrVmtZV05IU2toV2JuQk1WVEp6TWxFeWJFSmFNR3hFVVc1Q2FXSnJTWGhhUlZaaFkwZEtTRlpYWkZGVk1FbDNXVEl4YTAxR2NIUmlTRTVoVjBVMWFWcFZXWGRUTUd4RVVWZGtTbEo2YTNoYVJXaERUVmRTUmxkdVFtbFNNVlp1VlVaT1EwMUhUblJhUkVKaFlsZDRlbGRzYUU5WmJWWkhUVWhLU21GVVZUSlpWbWhDWVZWT2NGRlhaRXBSTUVvelYxWm9UMlZ0VVhsUFdHeGhVVEJGTlZOVlRrdE5SMDE1VW0xc2FGZEdTbTlaYTJoWFRXMUtTVlpxU2twYU1qbHVVMVZPUWxveGEzbFBXRkpxVTBWc2JsVkdUa0pOVlU1d1VWZGtTbEV3U2pOYVZtTjRZMGRLZEdKRVdtaFhSVVl4VjFSSk5XUkhUa2xUYlhocVRUQXhkbGxXWXpGa01sSlpWV3RrYUZZemFITlVSVlV4WkcxS2RGWllUbWxOTVZsM1dUQm9WMDFHU25SaVNFNWhWVE5vTTFkV2FFOWxiVkY1VDFoc1lWRXphSEZaYWtsNFpESk9jR0V3ZEVwUk1FWnVVMVZHZG1GcmJFbFViWGhvVFd0YU5WZFdZekZpYTJ4SVpFaENhMUl3Vm01WFZ6RnpaV3hzVkZGdVVtRldlbFoxV1ZWa1IyUXlVbGxVVjJSaFlsZDRlbGRzVGtOaFIwMTVaVWhDYVdKdGVHOVJNakZoWkcxT2NGRnVRa3BTTW5neFUxVm9TMkZIU25SYVIzaE1Vak5vYzFsdGJHOU5SMDUwV2tSQ1lXSlhlSHBYYkdoT1kwVjBWV0l3ZEVwUk1FWnVVMVZqTldWcmVIVlRiWGhwVm5wcmVWZHNUbTlOUjA1MFdrUkNZV0pYZUhwWGJHaFBXVzFHVjAxSVFrUmhWVVp1VTFWT1FsTXdiRVJSVjJSS1VWYzVjVk5WVmpSVlJrVjNZekprVTFKVldsWlZWazVEVWpGUmQyVkZWbE5XYTJ4dVZtcENSbG94VGxaTlZVcFRUVVphVlZFeVpIWlRNR3cxVVcxMGFGZEZjSE5YVkU1VFpHMU9kV0V5Wkd0U01GbzFWMnBLVjAxRlRuUlBXSEJOWWxVMWRsZHJaSE5sVlhSRVdUTmFhazB4U2pKWk1qRkhZbXh3VkU5WGVHbFhSbHA2VjFab1UySkdjRVJQU0dSTlRVVmFNVmRyYUV0a2JVWllWVmhhYVZZeFduSlpWbVJHWkd4cmVVOVlVazFpYlZKMlYxWm9VMlZzYkZsUmJtUk5UVmRTZGxkV2FGTmxiRVpaVVc1a1RVMUVSbk5YYTJSellVVjNlRnBIT1ZwWFJrbzJWVlpvUTJRd2JFWmlTRkphVmpKU2Mxa3phelJpYTNSU1lqQjBTbVZWU2pOWFZtaFBUVWRHV0dSSGFHbGhWVXA1V1Zab1UyRkZiRWhUYlhocVlsVmFjbGRXVGtOaE1rWlVVVzEwYUZkRmNITlhWRTVUWkcxT2RXRXlaR3RTTUZvMVYycEtWMDFGVG5WYVIzUm9WMFZzYmxWR1RrTmtiVTQxVGxjMVlWZEdTbkZhUkVwU1lqQjBVbUl3ZEVwbFZVcDVWMVpqZUdORmJFaE5WM2hwWWxWYU5WZHFTbGROUjBWNVVtNVdTbEl4Y0hkWmEyUldXakpTV0U1VVFtdFdNMDV1VjJ0a2MySkhTblJrU0d4b1YwVktObGxXUm5aaGEyeEpWR3BDYVUwd2NITlRWV2hUWWpGd1ZGRnRNV2hXTTJoeldXMHhSMlJHY0ZSUmJrSnBZVlZLZWxsV2FFOU5SVTUxV2tkb1lXSlhlSHBYYkdoT1dqRkNWRkZ0U2twU2FrSk1VVEpzVGxveGNFaFNiVEZyVWpCYU5WbFVTa2RrVld4SVRsZG9hVll3Vm01WGJURnpZekZ3VkZGdGJHRlhSWEJ5VjFab1QyRkhUblJrUjJocFlWVktkMXBGWkZkbFZteFpWRzVDUkdKV2NESlpNbXhEWWxkR1dHVkhlRXBTTW5neFUxVmpOV1ZyZUhSbFNFSnFUVEZLY2xsV2FFcGlNbEY1Vlc1Q2FtRlhjekpSTW14Q1dqQnNSRkZ1UW1GaFZVcDBXVlprTkdKRmVIUldibFpoVTBVMGVsbFdhRk5pTUhSRVdUTldhR0pyU25WVGJteHlUbXRPY0ZGWFpFcFJNRVp1VTFWT1EwMHhiRmhYYmtKcFVqRmFObFJITVVka01rNUlWbTVXWVZFeWFIUlpWbVEwWWtWMFVtTkhNV2xOTUd4dVYyMHhjMk14Y0ZSUmJrSnBZVlZLTWxremF6RmpNa1paVkdwQ1lWSXllRFZUTUdocllUSkdXVk5ZUWxCYU1qbHVVMVZPUWxveVJsaFhWMlJoWWxkNGVsZHNUVEZpUjBwMFZXNXdhMDF0ZDNkWlZVNXVZbXQ0ZFZGdVZtRmxWMDUzVkRKa2Rsb3diRVJSVjJSS1VUQkdibHBFU2tkaVYwWllaVWQ0YW1WVVZtOVpNR2hEWWtkS2RGVlhPV0ZpVjNoNlYyeE9jbE14Y0hSUFdHeEtVakZ3ZDFsclpGWmFNa1pZVGtka2FVMHdNVEZaYTJSelpXMVNTRlZ1UW1waFYyZDZWMnRrYzJWVmRGVmlNSFJLVVRCR2JsTlZaSE5pVld4SVYyNUNhVkl4VmpGWGJHTXhZVEpOZWxwSVFtdFNNbVIyVTI1ck1XTlhUa2hXYlRWTFpWZHpNbEV5YkVKYU1HeEVVVmRrU2xFd1NYcFhWbVJoWTBkS1NGWnVjRTFpVlZveldUQmtWMlJXY0VSaFJ6Rm9Wak5vYzFNeFJuZGlWMGw2VTFka1lXSlhlSHBYYkU1RFkwZEtjRkZ1V21wbFZGWjZXVlpvVDAxR2NFaGlTR3hNVTBkU2NsbFdhRXBqUlRsdVlqSmtTbEV3Um01WlZtUmFXakZ3ZEdKSVRtRlZlbFp6V1cweFUyVnRVWGxpUkVKb1VUSmtkVlJITVd0alJuQndXVE5DVUZveU9XNVRWVTVDV2pCc1JGRlhaR3ROYTFwMFdWWmtOR0pIVGpWT1YyaHFVMFZLYzFsdE1WSmlNWEIwWWtoT1lWVXlkRXhUVlU1Q1dqQnNSRkZYWkVwUldFSXpXVEl4YzJSWFVrUmhSRTVhVmpGd2QxbHJaRmRsYTNSU1lqQjBTbVZWU2pCYVJtUTBZVWRHVkZGdVVtRldlbFoxVjJ4ak1XTnRUblJpU0dScVRXMTBibGR0TVhOak1YQlVVVzEwWVZaNlZuVlhWbU13V2pKV2RHSklaRXBTTVVweldXMHhhMkZIU25CUmJrcGFWMFpLYjFOVmFFOWhSMHAwVlc1Q1JHSldjREpaTW14RFRrVnNTR0pJVmtwVFJYQnZXVzB4YTJKRmRFaGxSM2hwWVZkbmVsZFdaR0ZqUjBwSVZtNXdURlV5Y3pKUk1teENXakJzUkZGdVFtbGlhMGw0V2tWV1lXTkhTa2hXVjJSUlZUQkplbGRXWkdGalIwcElWbTV3V0UweWFHdFJNbXhDV2pCc1JGRnVXbXRYUmtveldrWm9VMUl5UmxobFIzaEtVa1JDYmxwRVNrZGlWMFpZWlVkNGFrMVlVVEJYUms1NllWVjRkV05JUW1wUk1HeE1VMVZPUWxvd2JFbFJiV2hxVFRBMGVsbHFUa3RoTUd4RlRVZGtTbUpzU2paWFZtUkxZMGRTU0ZKdVRtdFhSbkI2V2tab1dtRlZUbkJSVjJSS1VUQktjVmxxU1hoa01rNXdVVlJzU2xKR1ZreFRWVTVDV2pCc1NWRnFWbWxXTW5neFdWWm9kMk5IVGtST1YzQnBUV3BHTTFreU1WZGxiVTQxWVVoQ2FXSnJTWGhhUlZaaFkwZEtTRlpZVGxWaVZHd3hWMnhPTkdSdFVsbFZibVJyVjBaS1NGbFdaRFJpUlhoSlVXMW9hazB3TkhwWmFrNUxZVEI0U0ZSdVdtbFhSVW8xVXpGR2Rsb3diRVJSVjJSRVlWVXhibGw2U2xkamJHeFpVMjFvYVdKWFRtNVpWRXB6VFVac1ZGRnRiR2hYUlRWdlUxVmplR0pIU25SYVJ6bGFWMFZKZUZremJFTmlWMFpZWlVkNFNsSXdXalpaYTJSelpGZFdXRkpWZEdGaVZHdzFVMVZrY2xveVJsaE9SMlJxWWxWYU1WZHFTbFppTWtwSVZtNVdURk5IVW05WGJURnpZekZ3V1ZSWVFreFdSemxNVTFWT1Fsb3diRWhQV0hCTlltdHdjMWxzWXpWTmJIQlVZVVJPV2xZeGNIZFphMlJYWld4amVXSkhVa3hWVnpsdVUxVk9RbE13YkVSUlYyUktVVEJHVEZOWWJFTlVWbEYzVkd0NFNsSldTa05XYTFaR1dqRktjazlWTVZOU1ZscFVVMVZhYTFGcmJFWlZiRUpTVFZaYVQxVnNWVEZXVmxZellqQjBSR0ZWTVc1WGEyUnpaVlp3V0ZScVFtbE5NRzh4VTFWb1UyRkhUblJhUjNoclVWaENNbGt6YXpGaGJVWklWVzVDYW1GWFpIVlVSRTVQVFVkSmVsTnRhR0ZOYkZZeVYyeGplRTFYU2toU2FrSmhWakZHTWxSVlRUVlJiVXAwVlc1c2FVMXRlSEpVUkVsNFlrWndTR0pIYUUxTmF6VXlXV3hOTVUweVJraFNha0pxVFd0YU0xa3dUVFZYUjBaSVVtcENhazFGV2pOWk1FMDFWR3h3V0ZWdVFscFZlbXhaV1ZWa1IwMUhUWGRTYm1ScVVUQktSbGxxU2s5TlYwcFlWbTVXYTFORk1USlRibXh5VXpCT2NGUlhaR3BTTUZvMldrVmtjMk5zYkZoT1IyUm9UVzEzZDFkV1RrTmhWbkJaVTIxb1lWSXdWbTVYYTJSeVdqRndTR0pJYkdGV01EUjNXV3BPUzA1VmJFbFZiV2hxWWxkU2MxcEZSbmRoTWtsNVZXNUNhbUZWUlRWVFZXTTFaV3Q0ZEZwSGVHdFNNRFI2VjJ0T2JtTkZUbTVpTW5CS1VqTlNiMWxzWkhKYU1rcFlWbTVXV2xkRmNIVlhiR2hUWTJ4c1dFNUhaR0ZpVjNoNlYyeE9RMDFYU25WVmFrWm9aVlZLY2xsV1pGZGtWMFY2VTI1Q2FsTkZOWGRSTW14T1dqSk5lbFZ1V21waVZsWnVXa1ZrYjJKRmJFaFhia0pwVWpGYU1WZFdZM2hpUld4SVlraFdTbEl6YUhkWmVrNVNVekpSZVZKdGRHbE5iSEIzV1d0a1YyVnJiRVZOUjJSWVpWVkthMUV5WkhaaGEyeElWVzFvWVdKc1NtOVpNakV3WVVkS2NGRnVWbHBXZWtadlUxVmtZV05IU2toV1YyUmFZbFphTlZkclpFZGxiR3haVTI1S1dsWjZVbTVaVm1oVFlrZE9kRkp1Y0doVldFSjBXV3BPU2xveGNIUmlTRTVoVlRCS2QxbHRiRU5rYlU0MVRsaE9hRmRGTkhkWGEyUnpaVlYwU0ZWdVdtRlNNbmcxVXpGU2RsTXdiRVJSVjJSS1VqSjRkRk5WWkdGalIwcElWbGhXWVZaNlZuSlplazVyWTBkU1NGb3lPVXRsVkZZelYydGtXbUpyZEZWaU1IUktVVEJHYmxOVlRrSmFNR3hKV2tkb1lWSjZiSFJaVm1RMFlrZE9OVTVYYUdwVFJVcHpXVzB4VW1JeGNIUmlTRTVoVlRKMFRGZHRNRFZsVld4SVYyNUNhVkl4Vm01WlZtTXdXakpKZWxSWVZtbFNNbmcyV2tWa1UyTkhUbkJoUjNScFRXeEtkMWt5YkhKT2EwNXdVVmRrU2xFd1NuZFhiV3hEWWxkR1dHVkhlRTFpVmxveFYydG9UMDB5UmxsVmJUbE1VVEpPTVZwWE1YTmtNSEExWVhwYVJHRlZSbTVUVlU1Q1dqQnNSRkZxVGxwV01Vb3lWMjB4YzJNeGNGbFVXRlphVjBWS00xZHNZekZoTUhSSVYyNUNhVkl4Vm5kUk1qRmhaRzFPY0ZGdE1XaFdNMmh6VTFWa2MyUlZiRWhQV0hCTllsaG9kMWw2VGxOaE1rWlpVMWM1WVZKNmJISlpWbWhLWTBVNWJtSXlaRXBSTUVadVdWWmtXbG94Y0hSaVNFNWhWWHBXYzFsdE1WTmxiVkY1WWtSQ2FGRXlaSFZVUjNCclRtdHdOV0Y2V2tSaFZVWnVVMVZPUWxvd2JFUlJhazVhVmpGS01sZHRNWE5qTVhCWlZGaFdXbGRGU2pOWGJHTXhZVEIwU0ZkdVFtbFNNVlozVVRJeFlXUnRUbkJSYlRGb1ZqTm9jMU5WWkhOa1ZXeElUMWh3VFdKWWFIZFplazVUWVRKR1dWTlhPV0ZTZW14eVdWWm9TbU5GT1c1aU1tUktVVEJHYmxsV1pGcGFNWEIwWWtoT1lWVjZWbk5aYlRGVFpXMVJlV0pFUW1oUk1tUjFWRWMxVTA1SFVrUlpNMEpRV2pJNWJsTlZUa0phTUd4RVVWZGthMDFyV25KWmFrcGhZMGRLU0ZadWNFMWlWVm96V1RCa1YyUldjRVJoUnpGb1ZqTm9jMU14Um5kaVYwbDZVMWRrWVdKWGVIcFhiRTVEWTBkS2NGRnVXbXBsVkZaNldWWm9UMDFHY0VoaVNHeE1VakZLTWxkclpITmxWWFJWWWpCMFNsRXdSbTVUVldSellsVnNTRmR1UW1sU01WWXhWMnhqTVdFeVRYcGFTRUpyVWpKa2RsTnVhekZoTWtsNVZGYzFURlpIT1V4VFZVNUNXakJzUkZGWFpFcFRSMUp2VjJ0ak5XSlhSbGhsUjNocVpWUldiMWt3YUVOaVIwcDBWVmM1WVdKWGVIcFhiRTV5VXpGd2RFOVliRXBTTVhCM1dXdGtWbG95UmxoT1IyUnBUVEF4TVZsclpITmxiVkpJVlc1Q2FtRlhhSEpaYWtwVFkwZE9jR0Y2V2tSaFZVWnVVMVZPUTJOR2NIQlJiVEZvVmpOb2MxUkhNVmRrVm5CSlZHcE9hRmRHU25aVE1FNXFaRmRLV1ZGVVFrdGxWM015VVRKc1Fsb3diRVJSVjJSS1VUQkplbGRXWkZOa2JIQjBZa2hPWVZkRk1URlhWbWhEWkRGd1dFNVhkRXhTTVhCM1dXdGtWbU5GVG5SWGJscHFZVlZLZEZsV1pEUmlSV3hJWWtoV1NsSjZiRFpVUnpFMFkwZE5lbFZ0ZEdoWFJXeDJWMnRqTldFeVJsbFRXRUpRV2pJNWJsTlZUa0phTWtaWVYxZGtZV0pYZUhwWGJFMHhZa2RLZEZWdWNHdE5iWGQzV1ZWT2JtSnJlSFJOV0dST1pWZE9kMVF5WkhaYU1HeEVVVmRrU2xFd1JtNWFSRXBIWVRKSmVWZHVRbWxTTVZvMlZFY3hSMlF5VGtoV2JsWmhVVEpvZEZsV1pEUmlSWFJTWTBjeGFVMHdiRzVYYlRGell6RndWRkZ1UW1saFZVb3lXVE5yTVdNeVJsbFVha0poVWpKNE5WTXdaRk5rYkhCSVlraHNURlpIT1V4VFZVNUNXakJzU0dKSE1VcFNNWEIzV1d0a1ZtUldjRmhPVjNScVRUSlNkMXBGWkc1aU1IQTFUbGM1YTFKNlJucFRibXh5VG10T2NGRlhaRXBSTUVadVUxVk9RMDB4YkZoVmJscGhZbGQ0ZWxkc2FFNWtWbXhaVVc1a1lWWjZWbkpUTUdSaFkwZEtTRlpZUWtSaVZuQXlXVEpzUTJKWFJsaGxSM2hLVWpKNE1WTlZZelZsYTNoMFpVaENhazB4U25KWlZtaEtZakZ3U0U5WGRHaFhSV3gzVkRKa2Rsb3diRVJSVjJSb1ZqRnNibGR0TVhOak1YQlVUbGQ0YVdKV1NqWmFSRXB6VFVkR1JGb3lOVTFpYTBreFUyNXNjazVyVG5CUlYyUktVVEJHYmxOVlRrTk5NV3hZVlc1YVlXSlhlSHBYYkdoT1pGWnNXVkZ1WkdGV2VsWnlVekJrWVdOSFNraFdXRUpFWWxad01sa3liRU5pVjBaWVpVZDRTbEl5ZURGVFZXTTFaV3Q0ZEdWSVFtcE5NVXB5V1Zab1NtSXhjRWhQVjNSb1YwVnNkMVF5WkhaYU1HeEVVVmRrYUZZeGJHNVhiVEZ6WXpGd1ZFNVhlR2xpVmtvMldrUktjMDFIUmtSYU1qVk5ZbXMxZGxOdWJISk9hMDV3VVZka1NsRXdSbTVUVlU1RFRURnNXRlZ1V21GaVYzaDZWMnhvVG1SV2JGbFJibVJoVm5wV2NsTXdaR0ZqUjBwSVZsaENSR0pXY0RKWk1teERZbGRHV0dWSGVFcFNNbmd4VTFWak5XVnJlSFJsU0VKcVRURktjbGxXYUVwaU1YQklUMWQwYUZkRmJIZFVNbVIyV2pCc1JGRlhaR2hXTVd4dVYyMHhjMk14Y0ZST1YzaHBZbFpLTmxwRVNuTk5SMFpFV2pJMVRXSllRak5YYm14cVkwVTVibUl5WkVwUk1FWnVVMVZPUWxveVVYbFNiWFJwVFd4d2QxbHJaRmRsYTNoMFVtNWthbEl4V2pGWGEwNXZZbGRHV0dWSGVFeFZXRUowV1dwT1Nsb3hjSFJpU0U1aFZUQktkMWx0YkVOa2JVNDFUbGhPYUZkRk5IZFhhMlJ6WlZWMFNGVnVXbUZTTW5nMVV6RlNkbE13YkVSUlYyUktVako0ZEZOVlpHRmpSMHBJVmxoV1lWWjZWbkpaZWs1clkwZFNTRm95T1V0bFZGWjRXVEJrVjJKcmNEVmhlbHBFWVZWR2JsTlZUa0phTUd4RVVXcE9XbFl4U2pKWGJURnpZekZ3V1ZSWVZscFhSVW96VjJ4ak1XRXdkRWhYYmtKcFVqRldkMU5WVGtKYU1FNTBWMjVhYW1GVlNuUlpWbVEwWWtWc1NHSklWa3BTZW13MlZFY3hOR05IVFhwVmJYUm9WMFZzZGxkcll6VmhNa1paVTFoQ1VGb3lPVzVUVlU1Q1dqSkdXRmRYWkdGaVYzaDZWMnhOTVdKSFNuUlZibkJyVFcxM2QxbFZUbTVpYTNoMVVXNVdZV1ZYVG5kVU1tUjJXakJzUkZGWFpFcFJNRVp1V2tSS1IyRXlTWGxYYmtKcFVqRmFObFJITVVka01rNUlWbTVXWVZFeWFIUlpWbVEwWWtWMFVtTkhNV2xOTUd4dVYyMHhjMk14Y0ZSUmJrSnBZVlZLTWxremF6RmpNa1paVkdwQ1lWSXllRFZUTUdSVFpHeHdTR0pJYkV4V1J6bE1VMVZPUWxvd2JFaGlSekZLVWpGd2QxbHJaRlprVm5CWVRsZDBhazB5VW5kYVJXUnVZakJ3TlU1WE5XaFdNV3gxVXpGU2RsTXdiRVJSVjJSS1VUQkdibE5WYUd0aFJuQklUMWN4YUZZemFITlpNMnN4WVVkT1NWRnRlR2xpVmtaMlYyMHhjMk14Y0ZSaE1IUmhZbFJzTlZOVlpHRmpSMHBJVmxka2FGWjZVbTVaYWs1T1pGZEtTR0pJY0d0U01VcDNXVEpzYjJFeVNYbFZia0pxWVZkek1sRXliRUphTUd4RVVXNUNZV0ZWU25SWlZtUTBZa1Y0ZEZadVZtRlRSVFI2V1Zab1UySXdkRVJaTTFacVRURndkVk51YkhKT2EwNXdVVmRrU2xFd1JtNVRWVTVEVFRGc1dGVnVXbUZpVjNoNlYyeG9UbVJXYkZsUmJtUmhWbnBXY2xNd1pHRmpSMHBJVmxoQ1JHSldjREpaTW14RFlsZEdXR1ZIZUVwU01uZ3hVMVZqTldWcmVIUmxTRUpxVFRGS2NsbFdhRXBpTVhCSVQxZDBhRmRGYkhkVU1tUjJXakJzUkZGWFpHaFdNV3h1VjIweGMyTXhjRlJPVjNocFlsWktObHBFU25OTlIwWkVXakkxVFdKdGFIcFplazV1WW10MFZXSXdkRXBSTUVadVUxVk9RbG93YkVsYVIyaGhVbnBzZEZsV1pEUmlSMDQxVGxkb2FsTkZTbk5aYlRGU1lqRndkR0pJVG1GVk1uUk1VMVZPUWxvd2JFUlJWMlJLVVZoQ00xa3lNWE5rVjFKRVlVUk9XbFl4U2pKWGJURnpZekZ3V1ZSWVFrUmFNamx4VTFWamVFMVhTa2hTYmtKS1VucEdjMWx0TVd0aVIwcDBaRWhzYUZkRlNqWlpWazVEWWxkR1dHVkhlRXBTTVVweldXMHhhMkZIU25CUmFscG9WMFZHYmxkclpGZGtWbTk1VW01V1NsSXpVbTlhUldSR1dqSk5lVkp1Vm1GU01uUk1WMjB3TldWVmJFbGFNbVJvVm5wU2Jsa3lNVWRrVm05NVZsYzVhVkl4V2pGVE1HaHJZVVp3U0U5WE1XaFdNMmh6V1ROc2NtTkZPVzVpTW1SS1VUQkdibGxXWXpGa01sSlpWV3RrYUZZemFITlRWVkYzV2pKUmVWSnRkR2xOYkhCM1dXdGtWMlZzWTNwaFIxSkVZVlZHYmxOVlRrTmtiVkpaVlc1a2ExZEdTa2haVm1RMFlrVnNSVTFIWkd0TmExcHlXV3BLWVdOSFNraFdibkJZVFRKb2ExTXpiRXBrVjFaMFlraGtTbG95T1c1VFZVNUNXakpPU0ZKdWNHcE5NbEl5V1RJeFVsb3hRbFJSVjJ4clUwVTFiMWRYTVhOTlJteFlaVVJHYTJKWVozaGFSMnhLVXpCc1JGRlhaRXBTTURVeVdXeG9RMlZWYkVWTlIyUlBWVmM1YmxOVlRrSmFNazVKWWtoU2FGWjZWbmRhVnpGelpEQjRkRlJ1V21sWFJVbzFWMnhvVDJWcmRFaGlTRlpxVTBaWmQxVnRNWE5qTVhCVVpVVTVhVTFxVm5OVVJXTTFUVmRTU1ZGcVJtdFNWbkIzV1d0a1ZtTXlUa2hTYm5CcVRUSlNNbGt5TVZKak1XdDVUMWhTYWxORmJIZFJNbXhDV2pCc1JGRlZkRXBsVlVvMlYyeGtNR0ZIVG5SU2JsWmhaVlZLZVZsV2FGTmhSV3hJVTI1Q2FrMXJWbTVaYkdSWFpGWnZlV0ZIYUdwVFJsbzJVMVZrWVdOSFNraFdWMlJhVjBVMWVsbFdZekZPVm14U1kwY3hhVTB3Ykc1WlZrNURZMGRLY0ZGdWJGcFdlbFoxVjJ4T2IyTXhjRmhPUnpsclRXdGFjbGxxU21GalIwcElWbTV3VEZVeWN6SlJNbXhDV2pCc1JGRnVXbXBsVkZZMVYyeGplR1J0VW5SV1Z6bHJUV3RhY2xscVNtRmpSMHBJVm01d1dFMXRlR3RUTVVaMldqQnNSRkZYWkVSaFZURnVXWHBLVjJOc2JGbFRiV2hwWWxkT2JsbFVTbk5OUm14VVVXNWtXbFo2Vm5WWGFrcHpZekJzU0dGSGFHbFNNRm93VjFaak1Gb3lSa2xWYmxKcFVUQkplRmx0TlZOTlYwWTFVVzVTWVZaNlJuQlhiR2hMWTBkRmVWSnVWa3BTTW5neFdYcE9VMlZYVWxoa1NIQm9WVEJLZVZkc2FFTmhSbkJJVWxka2FFMXFiRFZYVnpGSFpGVnNTVlp1Vm10VFJscDVVMVZqZUdKSFNsaFRiV2hzVmpCYU5WTlZhRk5pUm14MVZtNXdXbFo2VWt4Wk1HaExZMGRLZFZWWE9VcGhWV3gzVVRJMVEyVlhSbGhPVkVKTVVUQndjRmRzWkV0aVIwNTBVbTVrV2xVd1NuUlpWbVEwWWtWc1NGSnVWbUZTTUZadVdrVmtWMk14YkZoYU1tUm9UV3RhTUZsV1RrTmpiVkpZVGxkd2FGVXdiSGRSTWpWRFpWZEdXRTVVUWt4Uk1HeHdVekZHZDJReVRuUmlTRlpyVVRKa2NGbFdZekZpYlVaWVRrZGthVll4V2pGWGFrcFhUVVpzV0dGRVJtaFZNRW96VjFab1QyVnRVWGxQV0d4aFVUQktNVnBXWkVaTU1HeEpZVE5hYVdGVmJIZFJNalZYWlZkS1JGRlViRXBTTW5neFdUQm9WMDFGZEVSVFYyUlFZVlZHY0ZNeFJuWlRNa1pZVjFka2ExZEZjSHBVUjNjMVdteHJlVTlZVm10U01GcDNXVzAxVDFwc2FEVmFNbXhzVlRCc2QxUXlaSFphTUd4RVVWZGthbE5GY0hkWmJUVlNZakJzY0ZOWVFrUmhWVVp1VTFWT1EyUXlUblJpU0ZaclVUSmtjRmRXWXpGaE1XeFVVVzA1V2xkRmIzaFpNMnhEWkVad1dFMVhiRnBYUjNodldUSnNRMk5zY0ZsUmJXaGhVakJXYmxsNlNrZE9WbXhVVVc1d1lWWXdjSE5aZWtwSFpWVnNSVlpZWkdobFZXeDNVVEpzUWxvd2JFUlJibVJxWWxkNE1WcEZUbTVoVm14WVRsZDBXbFV3U25aWFZtaExUVmRPTlZGdVVtRldlbFoxV1ZWb1YyRlhVbGhPVnpWb1ZUQktObGRXYUhOaFJXeElUVmQ0YVZJd1ducGFSbVJ5V2pKU1NGWnVUbUZXTWxJMVYxWmpkMW95VmxoU2JsWmhaVlZLYjFkclpFWmFNWEJJWWtkc1dsZEhVbTlaVlU1RFkwZEtkR0V5YkV4VlZ6bHVVMVZPUWxveVRrbFRia0pwWW14R2RsTlhiRXBqUlU1d1VWZGtTbEV3U2pOWk1qRnpaRmRTUkZveWJHdFJlbFl3VjJ4Tk5XRkdiSFJVYlhSaFZqRndkVmxWWkhOalYwVjVaVWhTYVdKVWJETlpNV2hMWlcxU1NWWnFTbXROTW1jeFdsZHdSazVWT1ZWUlYyeE1WVmhDTTFreU1YTmtWMUpFV2pKc1NtRlhkRXhSTWpGellsVnNTVlp1YkdsUmVsWnRWMFJLVDJSdFNuVlZiV2hvVm5wV05sZEVSVFJpTUd4MFRrZHNURlpIT1V4VFZVNUNXakJzU0ZacVVtaFhSa1oyVTFkc1NtTkRZM0JNYlZKc1dUSTVhMXBUWjI1a1dGSnRURlJuYmt0VGEwc25LUzVrWldOdlpHVW9KM1YwWmkwNEp5a3BDZz09JykuZGVjb2RlKCd1dGYtOCcpKQo=').decode('utf-8'))
').decode('utf-8'))
